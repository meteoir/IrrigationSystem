plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.1'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.andela'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	implementation 'commons-io:commons-io:2.7'
	implementation 'io.hypersistence:hypersistence-utils-hibernate-60:3.0.1'
	testImplementation 'org.spockframework:spock-core'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	implementation 'org.codehaus.groovy:groovy-all:3.0.10'
	testImplementation('org.spockframework.spock:spock-core')
	testImplementation('org.spockframework.spock:spock-spring')
	implementation "cglib:cglib:2.2"
	implementation 'org.objenesis:objenesis:1.4'

	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'com.nimbusds:oauth2-oidc-sdk:8.9'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

	implementation 'org.flywaydb:flyway-core'
	implementation 'org.postgresql:postgresql'

	implementation platform('com.amazonaws:aws-java-sdk-bom:1.12.372')
	implementation 'com.amazonaws:aws-java-sdk-s3'

	implementation 'org.apache.commons:commons-csv:1.8'

	// geohash
	implementation 'com.google.guava:guava:31.1-jre'
	implementation 'ch.hsr:geohash:1.4.0'
}

tasks.named('test') {
	useJUnitPlatform()
}
